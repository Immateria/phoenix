"use strict";(self.webpackChunk_phoenix_docs=self.webpackChunk_phoenix_docs||[]).push([[672],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,y=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return n?a.createElement(y,l(l({ref:t},d),{},{components:n})):a.createElement(y,l({ref:t},d))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2631:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={},l="Key",o={unversionedId:"api/key",id:"api/key",title:"Key",description:"Use Key to construct keys, bind callbacks, access their properties, and enable or disable them. You can have multiple handlers for a single key combination, however only one can be enabled at a time.",source:"@site/docs/api/key.md",sourceDirName:"api",slug:"/api/key",permalink:"/phoenix/api/key",draft:!1,editUrl:"https://github.com/kasper/phoenix/tree/master/docs/docs/api/key.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Iterable",permalink:"/phoenix/api/iterable"},next:{title:"Keys",permalink:"/phoenix/api/keys"}},c={},s=[{value:"Interface",id:"interface",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"Instance Properties",id:"instance-properties",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Instance Methods",id:"instance-methods",level:2},{value:"Example",id:"example",level:2}],d={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"key"},"Key"),(0,r.kt)("p",null,"Use Key to construct keys, bind callbacks, access their properties, and enable or disable them. You can have multiple handlers for a single key combination, however only one can be enabled at a time."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Enabling a key combination that has been exclusively registered by another app will fail. macOS gives exclusivity to the first app that requests the key combination.")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"keys"},"Keys")," for a list available keys for binding."),(0,r.kt)("h2",{id:"interface"},"Interface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"class Key implements Identifiable\n\n  static int on(String key, Array<String> modifiers, Function callback)\n  static void once(String key, Array<String> modifiers, Function callback)\n  static void off(int identifier)\n\n  property String key\n  property Array<String> modifiers\n\n  constructor Key Key(String key, Array<String> modifiers, Function callback)\n  boolean isEnabled()\n  boolean enable()\n  boolean disable()\n\nend\n")),(0,r.kt)("h2",{id:"static-methods"},"Static Methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"on(String key, Array<String> modifiers, Function callback)")," constructs a managed handler for a key and returns the identifier for the handler, for arguments see ",(0,r.kt)("inlineCode",{parentName:"li"},"new Key(...)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"once(String key, Array<String> modifiers, Function callback)")," constructs a managed handler for a key that is by default only triggered one time and then disabled, for more control you can explicitly return ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," from the callback function and the handler will not be disabled until you return something else, for arguments see ",(0,r.kt)("inlineCode",{parentName:"li"},"new Key(...)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"off(int identifier)")," disables the managed handler for a key with the given identifier")),(0,r.kt)("h2",{id:"instance-properties"},"Instance Properties"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key")," read-only property for the key character in lower case or case sensitive special key"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"modifiers")," read-only property for the key modifiers in lower case")),(0,r.kt)("h2",{id:"constructor"},"Constructor"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"new Key(String key, Array<String> modifiers, Function callback)")," constructs and binds the key character with the specified modifiers (can be an empty list) to a callback function and returns the handler, you must keep a reference to the handler in order for your callback to get called, you can have multiple handlers for a single key combination, only one can be enabled at a time, any previous handler for the same key combination will automatically be disabled, the callback function receives its handler as the first argument and as the second argument a boolean that indicates if the key was repeated (key combination is held down)")),(0,r.kt)("h2",{id:"instance-methods"},"Instance Methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isEnabled()")," returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if the key handler is enabled, by default ",(0,r.kt)("inlineCode",{parentName:"li"},"true")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"enable()")," enables the key handler, any previous handler for the same key combination will automatically be disabled, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if successful"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"disable()")," disables the key handler, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if successful")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Bind \u201cControl + Shift + Q\u201d to a callback function\nconst identifier = Key.on('q', ['control', 'shift'], () => {\n  console.log('Key combination pressed.');\n});\n\n// Disable the handler and release the key combination\nKey.off(identifier);\n")))}u.isMDXComponent=!0}}]);