"use strict";(self.webpackChunk_phoenix_docs=self.webpackChunk_phoenix_docs||[]).push([[967],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=i,w=u["".concat(c,".").concat(m)]||u[m]||d[m]||r;return t?a.createElement(w,o(o({ref:n},p),{},{components:t})):a.createElement(w,o({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9069:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var a=t(7462),i=t(3366),r=(t(7294),t(3905)),o=["components"],s={},c="Space",l={unversionedId:"api/space",id:"api/space",title:"Space",description:"Use the Space to control spaces. These features are only supported on El Capitan (10.11) and upwards. A single window can be in multiple spaces at the same time. To move a window to a different space, remove it from any existing spaces and add it to a new one. You can switch to a space by focusing on a window in that space. Beware that a space can get stale if you keep a reference to it and it is for instance closed while you do so.",source:"@site/docs/api/19-space.md",sourceDirName:"api",slug:"/api/space",permalink:"/phoenix/api/space",editUrl:"https://github.com/kasper/phoenix/tree/master/docs/docs/api/19-space.md",tags:[],version:"current",sidebarPosition:19,frontMatter:{},sidebar:"sidebar",previous:{title:"Screen",permalink:"/phoenix/api/screen"},next:{title:"Mouse",permalink:"/phoenix/api/mouse"}},p=[{value:"Interface",id:"interface",children:[],level:2},{value:"Static Methods",id:"static-methods",children:[],level:2},{value:"Instance Methods",id:"instance-methods",children:[{value:"2.7.0+",id:"270",children:[],level:3},{value:"Optionals",id:"optionals",children:[],level:3}],level:2},{value:"Example",id:"example",children:[],level:2}],d={toc:p};function u(e){var n=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"space"},"Space"),(0,r.kt)("p",null,"Use the Space to control spaces. ",(0,r.kt)("em",{parentName:"p"},"These features are only supported on El Capitan (10.11) and upwards.")," A single window can be in multiple spaces at the same time. To move a window to a different space, remove it from any existing spaces and add it to a new one. You can switch to a space by focusing on a window in that space. Beware that a space can get stale if you keep a reference to it and it is for instance closed while you do so."),(0,r.kt)("h2",{id:"interface"},"Interface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"class Space implements Identifiable, Iterable\n\n  static Space active() // macOS 10.11+\n  static Array<Space> all() // macOS 10.11+\n\n  boolean isNormal()\n  boolean isFullScreen()\n  Array<Screen> screens()\n  Array<Window> windows(Map<String, AnyObject> optionals)\n  void addWindows(Array<Window> windows)\n  void removeWindows(Array<Window> windows)\n\nend\n")),(0,r.kt)("h2",{id:"static-methods"},"Static Methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"active()")," returns the space containing the window with the keyboard focus (macOS 10.11+, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," otherwise)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"all()")," returns all spaces, the first space in this array corresponds to the primary space (macOS 10.11+, returns an empty list otherwise)")),(0,r.kt)("h2",{id:"instance-methods"},"Instance Methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isNormal()")," returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if the space is a normal space"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isFullScreen()")," returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if the space is a full screen space"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"screens()")," returns all screens to which the space belongs to"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"windows(Map<String, AnyObject> optionals)")," returns all windows for the space if no optionals are given"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addWindows(Array<Window> windows)")," adds the given windows to the space (< macOS 12.0)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"removeWindows(Array<Window> windows)")," removes the given windows from the space (< macOS 12.0)")),(0,r.kt)("h3",{id:"270"},"2.7.0+"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"moveWindows(Array<Window> windows)")," moves the given windows to the space (macOS 12.0+)")),(0,r.kt)("h3",{id:"optionals"},"Optionals"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"visible")," (boolean): if set ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," returns all visible windows for the space, if set ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," returns all hidden windows for the space")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Move focused window to the next space and focus to the space (macOS 12.0+)\nconst space = Space.active();\nconst window = Window.focused();\nspace.moveWindows([window]);\nwindow.focus();\n\n// Move focused window to the next space and focus to the space (< macOS 12.0)\nconst space = Space.active();\nconst window = Window.focused();\nspace.next().addWindows([window]);\nspace.removeWindows([window]);\nwindow.focus();\n")))}u.isMDXComponent=!0}}]);