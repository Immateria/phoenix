"use strict";(self.webpackChunk_phoenix_docs=self.webpackChunk_phoenix_docs||[]).push([[818],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=i.createContext({}),s=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return i.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||r;return t?i.createElement(f,o(o({ref:n},u),{},{components:t})):i.createElement(f,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=t[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9463:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var i=t(7462),a=t(3366),r=(t(7294),t(3905)),o=["components"],l={},p="App",s={unversionedId:"api/app",id:"api/app",title:"App",description:"Use App to control apps. Beware that an app can get stale if you keep a reference to it and it is for instance terminated while you do so, refer to isTerminated().",source:"@site/docs/api/21-app.md",sourceDirName:"api",slug:"/api/app",permalink:"/phoenix/api/app",editUrl:"https://github.com/kasper/phoenix/tree/master/docs/docs/api/21-app.md",tags:[],version:"current",sidebarPosition:21,frontMatter:{},sidebar:"sidebar",previous:{title:"Mouse",permalink:"/phoenix/api/mouse"},next:{title:"Window",permalink:"/phoenix/api/window"}},u={},c=[{value:"Interface",id:"interface",level:2},{value:"Static Methods",id:"static-methods",level:2},{value:"Launch Optionals",id:"launch-optionals",level:3},{value:"Instance Methods",id:"instance-methods",level:2},{value:"Window Optionals",id:"window-optionals",level:3},{value:"Terminate Optionals",id:"terminate-optionals",level:3},{value:"Example",id:"example",level:2}],d={toc:c};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"app"},"App"),(0,r.kt)("p",null,"Use App to control apps. Beware that an app can get stale if you keep a reference to it and it is for instance terminated while you do so, refer to ",(0,r.kt)("inlineCode",{parentName:"p"},"isTerminated()"),"."),(0,r.kt)("h2",{id:"interface"},"Interface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"class App implements Identifiable\n\n  static App get(String appName)\n  static App launch(String appName, Map<String, AnyObject> optionals)\n  static App focused()\n  static Array<App> all()\n\n  int processIdentifier()\n  String bundleIdentifier()\n  String name()\n  Image icon()\n  boolean isActive()\n  boolean isHidden()\n  boolean isTerminated()\n  Window mainWindow()\n  Array<Window> windows(Map<String, AnyObject> optionals)\n  boolean activate()\n  boolean focus()\n  boolean show()\n  boolean hide()\n  boolean terminate(Map<String, AnyObject> optionals)\n\nend\n")),(0,r.kt)("h2",{id:"static-methods"},"Static Methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"get(String appName)")," returns the running app with the given name, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," if the app is not currently running"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"launch(String appName, Map<String, AnyObject> optionals)")," launches and returns the app with the given name, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," if unsuccessful"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"focused()")," returns the focused app"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"all()")," returns all running apps")),(0,r.kt)("h3",{id:"launch-optionals"},"Launch Optionals"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"focus")," (boolean): if set ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," the app will automatically be focused on launch, by default the app launches to the background")),(0,r.kt)("h2",{id:"instance-methods"},"Instance Methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"processIdentifier()")," returns the process identifier (PID) for the app, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"-1")," if the app does not have a PID"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bundleIdentifier()")," returns the bundle identifier for the app"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name()")," returns the name for the app"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"icon()")," returns the icon for the app"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isActive()")," returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if the app is currently frontmost"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isHidden()")," returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if the app is hidden"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isTerminated()")," returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if the app has been terminated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mainWindow()")," returns the main window for the app, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," if the app does not currently have a main window"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"windows(Map<String, AnyObject> optionals)")," returns all windows for the app if no optionals are given"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"activate()")," activates the app and brings its windows forward, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if successful"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"focus()")," activates the app and brings its windows to focus, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if successful"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"show()")," shows the app, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if successful"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hide()")," hides the app, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if successful"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"terminate(Map<String, AnyObject> optionals)")," terminates the app, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if successful")),(0,r.kt)("h3",{id:"window-optionals"},"Window Optionals"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"visible")," (boolean): if set ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," returns all visible windows for the app, if set ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," returns all hidden windows for the app")),(0,r.kt)("h3",{id:"terminate-optionals"},"Terminate Optionals"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"force")," (boolean): if set ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," force terminates the app")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Launch Safari with focus\nApp.launch('Safari', { focus: true });\n\n// Get the focused app\nconst focused = App.focused();\n\n// Get all windows for the focused app\nconst windows = focused.windows();\n\n// Get Safari\nconst safari = App.get('Safari');\n")))}m.isMDXComponent=!0}}]);