"use strict";(self.webpackChunk_phoenix_docs=self.webpackChunk_phoenix_docs||[]).push([[683],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(d,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6619:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={},d="Modal",p={unversionedId:"api/modal",id:"api/modal",title:"Modal",description:"Use Modal to display content as modal windows (in front of all other windows). Modals can be used to display icons and/or text for visual cues. Properties defined as dynamic can be altered while the modal is displayed.",source:"@site/docs/api/17-modal.md",sourceDirName:"api",slug:"/api/modal",permalink:"/phoenix/api/modal",editUrl:"https://github.com/kasper/phoenix/tree/master/docs/docs/api/17-modal.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{},sidebar:"sidebar",previous:{title:"Image",permalink:"/phoenix/api/image"},next:{title:"Screen",permalink:"/phoenix/api/screen"}},s=[{value:"Interface",id:"interface",children:[],level:2},{value:"Static Methods",id:"static-methods",children:[],level:2},{value:"Instance Properties",id:"instance-properties",children:[{value:"3.0.0+",id:"300",children:[],level:3}],level:2},{value:"Constructor",id:"constructor",children:[],level:2},{value:"Instance Methods",id:"instance-methods",children:[{value:"3.0.0+",id:"300-1",children:[],level:3}],level:2},{value:"Example",id:"example",children:[],level:2}],c={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"modal"},"Modal"),(0,o.kt)("p",null,"Use Modal to display content as modal windows (in front of all other windows). Modals can be used to display icons and/or text for visual cues. Properties defined as dynamic can be altered while the modal is displayed."),(0,o.kt)("h2",{id:"interface"},"Interface"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"class Modal implements Identifiable\n\n  static Modal build(Map<String, AnyObject> properties)\n\n  property Point origin\n  property double duration\n  property double animationDuration\n  property double weight\n  property String appearance\n  property boolean hasShadow\n  property Image icon\n  property String text\n  property String font\n  property boolean isInput\n  property String inputPlaceholder\n  property Function textDidChange\n\n  constructor Modal Modal()\n  void setTextColour(double red, double green, double blue, double alpha) // or setTextColor(...)\n  Rectangle frame()\n  void show()\n  void close()\n\nend\n")),(0,o.kt)("h2",{id:"static-methods"},"Static Methods"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"build(Map<String, AnyObject> properties)")," builds a modal with the specified properties and returns it, ",(0,o.kt)("inlineCode",{parentName:"li"},"origin")," should be a function that receives the frame for the modal as the only argument and returns a ",(0,o.kt)("inlineCode",{parentName:"li"},"Point")," object which will be set as the origin for the modal")),(0,o.kt)("h2",{id:"instance-properties"},"Instance Properties"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"origin")," dynamic property for the origin of the modal, the enclosed properties are read-only so you must pass an object for this property, bottom left based origin, by default ",(0,o.kt)("inlineCode",{parentName:"li"},"(0, 0)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"duration")," property for the duration (in seconds) before automatically closing the modal, if the duration is set to ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," the modal will remain open until closed, by default ",(0,o.kt)("inlineCode",{parentName:"li"},"0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"animationDuration")," property for the animation duration (in seconds) for showing and closing the modal, if the duration is set to ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," the animation will be disabled, by default ",(0,o.kt)("inlineCode",{parentName:"li"},"0.2")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"weight")," dynamic property for the weight of the modal (in points), by default ",(0,o.kt)("inlineCode",{parentName:"li"},"24")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"appearance")," property for the appearance of the modal (",(0,o.kt)("inlineCode",{parentName:"li"},"dark|light|transparent"),"), by default ",(0,o.kt)("inlineCode",{parentName:"li"},"dark")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"icon")," dynamic property for the icon displayed in the modal"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"text")," dynamic property for the text displayed in the modal")),(0,o.kt)("h3",{id:"300"},"3.0.0+"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"hasShadow")," property for whether the modal has a shadow, by default ",(0,o.kt)("inlineCode",{parentName:"li"},"true")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"font")," dynamic property for the font name used for the text, by default ",(0,o.kt)("inlineCode",{parentName:"li"},"System")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"isInput")," property for whether the modal behaves as an input modal, by default ",(0,o.kt)("inlineCode",{parentName:"li"},"false")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"inputPlaceholder")," property for the placeholder string that will be displayed when the input is empty, by default empty"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"textDidChange")," callback function to call when the input modal\u2019s text field value changes, receives the value as the first argument for the callback")),(0,o.kt)("h2",{id:"constructor"},"Constructor"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"new Modal()")," constructs and returns a new modal")),(0,o.kt)("h2",{id:"instance-methods"},"Instance Methods"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"frame()")," returns the frame for the modal, the frame is adjusted for the current content, therefor you must first set the weight, icon and text to get an accurate frame, bottom left based origin"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"show()")," shows the modal, you must set at least an icon or text for the modal to be displayed"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"close()")," closes the modal")),(0,o.kt)("h3",{id:"300-1"},"3.0.0+"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"setTextColour(double red, double green, double blue, double alpha)")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"setTextColor(...)")," sets a custom text colour with the given RGBA values, for example ",(0,o.kt)("inlineCode",{parentName:"li"},"setTextColor(34, 139, 34, 1)"))),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// Build and show a modal for half a second\nModal.build({\n  duration: 0.5,\n  weight: 48,\n  appearance: 'dark',\n  icon: App.get('Phoenix').icon(),\n  text: 'Hello World!',\n}).show();\n\n// Show an input modal in the middle of the main screen\nconst screenFrame = Screen.main().flippedVisibleFrame();\nconst modal = new Modal();\nmodal.isInput = true;\nmodal.appearance = 'light';\nmodal.origin = {\n  x: screenFrame.width / 2 - modal.frame().width / 2,\n  y: screenFrame.height / 2 - modal.frame().height / 2,\n};\nmodal.textDidChange = (value) => {\n  console.log('Text did change:', value);\n};\nmodal.show();\n")))}u.isMDXComponent=!0}}]);