"use strict";(self.webpackChunk_phoenix_docs=self.webpackChunk_phoenix_docs||[]).push([[723],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function g(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=g(e,["components","mdxType","originalType","parentName"]),p=c(t),d=o,f=p["".concat(s,".").concat(d)]||p[d]||l[d]||i;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var g={};for(var s in n)hasOwnProperty.call(n,s)&&(g[s]=n[s]);g.originalType=e,g.mdxType="string"==typeof e?e:o,a[1]=g;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8227:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return g},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],g={},s="Logging and Debugging",c={unversionedId:"getting-started/logging-and-debugging",id:"getting-started/logging-and-debugging",title:"Logging and Debugging",description:"To log messages, use Phoenix.log. The messages are delivered to the Console (app). You can filter logs by process by searching for \u201cPhoenix\u201d. You can also follow the logs from a terminal by running log stream --process Phoenix.",source:"@site/docs/getting-started/6-logging-and-debugging.md",sourceDirName:"getting-started",slug:"/getting-started/logging-and-debugging",permalink:"/phoenix/getting-started/logging-and-debugging",editUrl:"https://github.com/kasper/phoenix/tree/master/docs/docs/getting-started/6-logging-and-debugging.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"sidebar",previous:{title:"About Coordinates",permalink:"/phoenix/getting-started/about-coordinates"},next:{title:"Keys",permalink:"/phoenix/api/keys"}},u=[],l={toc:u};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"logging-and-debugging"},"Logging and Debugging"),(0,i.kt)("p",null,"To log messages, use ",(0,i.kt)("inlineCode",{parentName:"p"},"Phoenix.log"),". The messages are delivered to the Console (app). You can filter logs by process by searching for \u201cPhoenix\u201d. You can also follow the logs from a terminal by running ",(0,i.kt)("inlineCode",{parentName:"p"},"log stream --process Phoenix"),"."),(0,i.kt)("p",null,"To debug your configuration, use Safari\u2019s Web Inspector. You can attach to the context from Safari\u2019s \u201cDevelop\u201d menu under your devices name. Read a more comprehensive ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kasper/phoenix/wiki/Attaching-to-Web-Inspector-for-Debugging/"},"instruction")," to get started. In the Web Inspector\u2019s Console you can also see messages outputted with ",(0,i.kt)("inlineCode",{parentName:"p"},"console.log"),". ",(0,i.kt)("em",{parentName:"p"},"Note, this only works on non-notarised versions of Phoenix (2.6.2 or later) or with debug builds.")))}p.isMDXComponent=!0}}]);